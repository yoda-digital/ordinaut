{
  "version": "1.0",
  "description": "Ordinaut Tool Catalog",
  "tools": [
    {
      "address": "telegram-mcp.send_message",
      "transport": "http",
      "endpoint": "http://telegram-bridge:8085/tools/send_message",
      "input_schema": {
        "type": "object",
        "required": ["chat_id", "text"],
        "properties": {
          "chat_id": {
            "type": "integer", 
            "minimum": 1,
            "description": "Telegram chat ID to send message to"
          },
          "text": {
            "type": "string", 
            "minLength": 1, 
            "maxLength": 4096,
            "description": "Message text to send"
          },
          "disable_preview": {
            "type": "boolean", 
            "default": true,
            "description": "Disable web page preview"
          },
          "parse_mode": {
            "type": "string",
            "enum": ["HTML", "Markdown", "MarkdownV2"],
            "description": "Message formatting mode"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["ok", "message_id", "ts"],
        "properties": {
          "ok": {"type": "boolean", "description": "Success status"},
          "message_id": {"type": "integer", "description": "Sent message ID"},
          "ts": {"type": "string", "format": "date-time", "description": "Send timestamp"},
          "chat_id": {"type": "integer", "description": "Chat ID message was sent to"}
        }
      },
      "timeout_seconds": 15,
      "scopes": ["notify"],
      "cost_tier": "low",
      "description": "Send message to Telegram chat or channel",
      "examples": [
        {
          "name": "simple_message", 
          "input": {"chat_id": 12345, "text": "Hello from orchestrator!"},
          "description": "Send simple text message"
        },
        {
          "name": "formatted_message",
          "input": {
            "chat_id": 12345, 
            "text": "*Morning briefing:*\n- 3 meetings today\n- Rain expected at 2PM", 
            "parse_mode": "Markdown"
          },
          "description": "Send formatted message with Markdown"
        }
      ]
    },
    
    {
      "address": "google-calendar-mcp.list_events",
      "transport": "http", 
      "endpoint": "http://gcal-bridge:8086/tools/list_events",
      "input_schema": {
        "type": "object",
        "required": ["start", "end"],
        "properties": {
          "start": {
            "type": "string", 
            "format": "date-time",
            "description": "Start time for event search (ISO 8601)"
          },
          "end": {
            "type": "string", 
            "format": "date-time", 
            "description": "End time for event search (ISO 8601)"
          },
          "max": {
            "type": "integer", 
            "default": 50, 
            "minimum": 1,
            "maximum": 500,
            "description": "Maximum number of events to return"
          },
          "calendar_id": {
            "type": "string",
            "description": "Specific calendar ID (uses primary if not specified)"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "summary"],
              "properties": {
                "id": {"type": "string", "description": "Event ID"},
                "summary": {"type": "string", "description": "Event title"}, 
                "description": {"type": "string", "description": "Event description"},
                "start": {"type": "string", "format": "date-time", "description": "Event start time"},
                "end": {"type": "string", "format": "date-time", "description": "Event end time"},
                "location": {"type": "string", "description": "Event location"},
                "attendees": {
                  "type": "array",
                  "items": {
                    "type": "object", 
                    "properties": {
                      "email": {"type": "string"},
                      "displayName": {"type": "string"},
                      "responseStatus": {"type": "string"}
                    }
                  }
                }
              }
            }
          },
          "nextPageToken": {"type": "string", "description": "Token for pagination"}
        }
      },
      "timeout_seconds": 20,
      "scopes": ["calendar.read"],
      "cost_tier": "medium", 
      "description": "List Google Calendar events in specified date range",
      "examples": [
        {
          "name": "today_events",
          "input": {
            "start": "2025-08-08T00:00:00Z",
            "end": "2025-08-08T23:59:59Z"
          },
          "description": "Get all events for today"
        },
        {
          "name": "next_week_meetings", 
          "input": {
            "start": "2025-08-08T00:00:00Z",
            "end": "2025-08-15T23:59:59Z",
            "max": 20
          },
          "description": "Get next week's events, limited to 20"
        }
      ]
    },
    
    {
      "address": "weather-mcp.forecast",
      "transport": "http",
      "endpoint": "http://weather-service:8088/tools/forecast", 
      "input_schema": {
        "type": "object",
        "required": ["location"],
        "properties": {
          "location": {
            "type": "string",
            "description": "City name or coordinates (lat,lon)"
          },
          "days": {
            "type": "integer",
            "default": 1,
            "minimum": 1, 
            "maximum": 7,
            "description": "Number of days to forecast"
          },
          "units": {
            "type": "string",
            "enum": ["metric", "imperial", "standard"],
            "default": "metric", 
            "description": "Temperature units"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["location", "forecast"],
        "properties": {
          "location": {"type": "string", "description": "Resolved location name"},
          "current": {
            "type": "object",
            "properties": {
              "temperature": {"type": "number"},
              "humidity": {"type": "number"},
              "description": {"type": "string"},
              "wind_speed": {"type": "number"}
            }
          },
          "forecast": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {"type": "string", "format": "date"},
                "temp_min": {"type": "number"},
                "temp_max": {"type": "number"}, 
                "description": {"type": "string"},
                "precipitation": {"type": "number"},
                "wind_speed": {"type": "number"}
              }
            }
          }
        }
      },
      "timeout_seconds": 10,
      "scopes": ["weather"],
      "cost_tier": "low",
      "description": "Get weather forecast for location",
      "examples": [
        {
          "name": "chisinau_today",
          "input": {"location": "Chisinau, Moldova"},
          "description": "Today's weather for Chisinau"
        },
        {
          "name": "week_forecast",
          "input": {"location": "New York, NY", "days": 7},
          "description": "7-day forecast for New York"
        }
      ]
    },
    
    {
      "address": "llm.summarize",
      "transport": "http",
      "endpoint": "http://llm-service:8087/tools/summarize",
      "input_schema": {
        "type": "object", 
        "required": ["content"],
        "properties": {
          "content": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10000,
            "description": "Content to summarize"
          },
          "max_length": {
            "type": "integer",
            "default": 200,
            "minimum": 50,
            "maximum": 1000,
            "description": "Maximum summary length in words"
          },
          "style": {
            "type": "string", 
            "enum": ["bullet_points", "paragraph", "executive"],
            "default": "paragraph",
            "description": "Summary style"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["summary"],
        "properties": {
          "summary": {"type": "string", "description": "Generated summary"},
          "word_count": {"type": "integer", "description": "Summary word count"},
          "confidence": {"type": "number", "minimum": 0, "maximum": 1}
        }
      },
      "timeout_seconds": 30,
      "scopes": ["llm"],
      "cost_tier": "high", 
      "description": "Summarize text content using LLM",
      "examples": [
        {
          "name": "meeting_notes",
          "input": {
            "content": "Long meeting transcript...",
            "style": "bullet_points", 
            "max_length": 150
          },
          "description": "Summarize meeting notes as bullet points"
        }
      ]
    },
    
    {
      "address": "llm.plan", 
      "transport": "http",
      "endpoint": "http://llm-service:8087/tools/plan",
      "input_schema": {
        "type": "object",
        "required": ["instruction"],
        "properties": {
          "instruction": {
            "type": "string",
            "minLength": 10, 
            "maxLength": 2000,
            "description": "Planning instruction or prompt"
          },
          "calendar": {
            "type": "array",
            "description": "Calendar events context"
          },
          "weather": {
            "type": "object", 
            "description": "Weather information context"
          },
          "emails": {
            "type": "array",
            "description": "Email context"
          },
          "context": {
            "type": "object",
            "description": "Additional context data"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["text"],
        "properties": {
          "text": {"type": "string", "description": "Generated plan"},
          "priority_items": {
            "type": "array", 
            "items": {"type": "string"},
            "description": "High priority action items"
          },
          "confidence": {"type": "number", "minimum": 0, "maximum": 1}
        }
      },
      "timeout_seconds": 45,
      "scopes": ["llm"],
      "cost_tier": "high",
      "description": "Generate daily plan using LLM from context",
      "examples": [
        {
          "name": "morning_briefing",
          "input": {
            "instruction": "Create morning briefing with calendar, weather, and top emails",
            "calendar": [{"summary": "Team meeting", "start": "09:00"}],
            "weather": {"current": {"temperature": 22, "description": "sunny"}},
            "emails": [{"subject": "Project update", "from": "manager@company.com"}]
          },
          "description": "Generate morning briefing plan"
        }
      ]
    },

    {
      "address": "imap-mcp.top_unread", 
      "transport": "http",
      "endpoint": "http://email-bridge:8089/tools/top_unread",
      "input_schema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of emails to retrieve"
          },
          "folder": {
            "type": "string",
            "default": "INBOX", 
            "description": "Email folder to search"
          },
          "max_age_hours": {
            "type": "integer",
            "default": 168,
            "description": "Maximum age of emails in hours"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["emails"],
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "subject", "from", "date"],
              "properties": {
                "id": {"type": "string", "description": "Email ID"},
                "subject": {"type": "string", "description": "Email subject"}, 
                "from": {"type": "string", "description": "Sender address"},
                "to": {"type": "string", "description": "Recipient address"},
                "date": {"type": "string", "format": "date-time"},
                "preview": {"type": "string", "description": "Email preview text"},
                "importance": {"type": "string", "enum": ["low", "normal", "high"]}
              }
            }
          },
          "total_unread": {"type": "integer", "description": "Total unread count"}
        }
      },
      "timeout_seconds": 20,
      "scopes": ["email.read"],
      "cost_tier": "medium",
      "description": "Get top unread emails from IMAP account",
      "examples": [
        {
          "name": "morning_emails",
          "input": {"count": 5},
          "description": "Get top 5 unread emails"
        }
      ]
    },

    {
      "address": "echo.test",
      "transport": "http", 
      "endpoint": "http://localhost:8090/echo",
      "input_schema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Message to echo back"
          },
          "delay_seconds": {
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 10,
            "description": "Artificial delay for testing"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "required": ["echoed"],
        "properties": {
          "echoed": {"type": "string", "description": "Echoed message"},
          "timestamp": {"type": "string", "format": "date-time"},
          "delay_applied": {"type": "number", "description": "Actual delay applied"}
        }
      },
      "timeout_seconds": 15,
      "scopes": ["test"],
      "cost_tier": "free",
      "description": "Echo test tool for pipeline validation and testing",
      "examples": [
        {
          "name": "simple_echo",
          "input": {"message": "Hello, world!"},
          "description": "Simple echo test"
        },
        {
          "name": "delayed_echo", 
          "input": {"message": "Testing delay", "delay_seconds": 2},
          "description": "Echo with artificial delay"
        }
      ]
    }
  ]
}