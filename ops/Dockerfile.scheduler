# Base stage with common dependencies
FROM python:3.12-slim AS base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create app user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements.txt /app/requirements.txt

# Install Python dependencies needed for scheduler
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir \
    SQLAlchemy==2.0.31 \
    psycopg[binary]==3.1.19 \
    apscheduler==3.11.0 \
    python-dateutil==2.9.0.post0 \
    redis==5.0.7 \
    pydantic==2.8.2

# Copy application code needed for scheduler
COPY scheduler/ /app/scheduler/
COPY engine/ /app/engine/
COPY observability/ /app/observability/

# Change ownership to app user
RUN chown -R appuser:appuser /app

# Development stage
FROM base AS development

# Install development dependencies
RUN pip install --no-cache-dir pytest pytest-asyncio

# Switch to non-root user
USER appuser

# Run the APScheduler service with debug logging
CMD ["python", "scheduler/tick.py", "--debug"]

# Production stage
FROM base AS production

# Switch to non-root user
USER appuser

# Run the APScheduler service
CMD ["python", "scheduler/tick.py"]